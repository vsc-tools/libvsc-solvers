
cmake_minimum_required(VERSION 3.10)

project(libvsc)

include (ExternalProject)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED True)

#set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)

set(CMAKE_POSITION_INDEPENDENT_CODE ON)
if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Release)
endif()

if (NOT PACKAGES_DIR)
  set(PACKAGES_DIR ${CMAKE_SOURCE_DIR}/packages)


  # Testing is only enabled when libvsc is the top-level project
  enable_testing()
  add_subdirectory(test)

endif()

set (GMP_DIR "${PACKAGES_DIR}/gmp")
set (CADICAL_DIR "${PACKAGES_DIR}/cadical")
set (BTOR2TOOLS_DIR "${PACKAGES_DIR}/btor2tools")
set (BOOLECTOR_DIR "${PACKAGES_DIR}/boolector")
set (BITWUZLA_DIR "${PACKAGES_DIR}/bitwuzla")

ExternalProject_Add(GMP
    PREFIX gmp
    SOURCE_DIR ${GMP_DIR}
  #  URL https://gmplib.org/download/gmp/gmp-6.2.1.tar.xz
  #DOWNLOAD_DIR ${CMAKE_CURRENT_BINARY_DIR}/downloads
  #  ${gmp_DOWNLOAD}
  #  PATCH_COMMAND cmake -DPATCH_DIR=${CMAKE_CURRENT_SOURCE_DIR}/patches -P ${CMAKE_CURRENT_SOURCE_DIR}/patches/btor2tools/btor2tools.cmake
  CMAKE_CACHE_ARGS
if(APPLE)
    CONFIGURE_COMMAND sh -c "${PACKAGES_DIR}/gmp/configure --prefix=<INSTALL_DIR> --enable-cxx"
else()
    CONFIGURE_COMMAND sh -c "CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} ${PACKAGES_DIR}/gmp/configure --prefix=<INSTALL_DIR> --enable-cxx"
endif()
    BUILD_COMMAND sh -c "make -j`nproc`"
#    INSTALL_COMMAND sh -c "mkdir <INSTALL_DIR>/shlib" COMMAND sh -c "make install" COMMAND sh -c "mv <INSTALL_DIR>/lib/*.so* <INSTALL_DIR>/shlib"
    INSTALL_COMMAND sh -c "make install"
    -DCMAKE_C_COMPILER:STRING=${CMAKE_C_COMPILER}
    -DCMAKE_CXX_COMPILER:STRING=${CMAKE_CXX_COMPILER}
    -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS}
    -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
    -DBUILD_SHARED_LIBS:BOOL=${BUILD_SHARED_LIBS}
    -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_CURRENT_BINARY_DIR}
  )
 
ExternalProject_Add(Cadical
  PREFIX cadical
  SOURCE_DIR ${CADICAL_DIR}
  CMAKE_CACHE_ARGS
    -DCMAKE_INTERPROCEDURAL_OPTIMIZATION:BOOL=${CMAKE_INTERPROCEDURAL_OPTIMIZATION}
    -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=${CMAKE_POSITION_INDEPENDENT_CODE}
    -DCMAKE_C_COMPILER:STRING=${CMAKE_C_COMPILER}
    -DCMAKE_CXX_COMPILER:STRING=${CMAKE_CXX_COMPILER}
    -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS}
    -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
    -DBUILD_SHARED_LIBS:BOOL=${BUILD_SHARED_LIBS}
    -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_CURRENT_BINARY_DIR}
    -DCMAKE_BUILD_TYPE:STRING=Release
    -DCMAKE_CXX_STANDARD:STRING=${CMAKE_CXX_STANDARD}
    -DCMAKE_CXX_STANDARD_REQUIRED:BOOL=${CMAKE_CXX_STANDARD_REQUIRED}
  )
 
ExternalProject_Add(Btor2tools
  PREFIX btor2tools
  SOURCE_DIR ${BTOR2TOOLS_DIR}
  CMAKE_CACHE_ARGS
    -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=${CMAKE_POSITION_INDEPENDENT_CODE}
    -DCMAKE_C_COMPILER:STRING=${CMAKE_C_COMPILER}
    -DCMAKE_CXX_COMPILER:STRING=${CMAKE_CXX_COMPILER}
    -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS}
    -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
    -DBUILD_SHARED_LIBS:BOOL=${BUILD_SHARED_LIBS}
    -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_CURRENT_BINARY_DIR}
    -DCMAKE_INSTALL_LIBDIR:STRING=lib64
    -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
    -DCMAKE_CXX_STANDARD:STRING=${CMAKE_CXX_STANDARD}
    -DCMAKE_CXX_STANDARD_REQUIRED:BOOL=${CMAKE_CXX_STANDARD_REQUIRED}
  )

if(WIN32)
        set(LIB_BTOR2TOOLS ${CMAKE_CURRENT_BINARY_DIR}/lib/btor2parser.lib)
        set(LIB_CADICAL ${CMAKE_CURRENT_BINARY_DIR}/lib/cadical.lib)
elseif(APPLE)
        set(LIB_BTOR2TOOLS ${CMAKE_CURRENT_BINARY_DIR}/lib64/libbtor2parser.a)
        set(LIB_CADICAL ${CMAKE_CURRENT_BINARY_DIR}/lib/libcadical.a)
        set(LIB_GMP ${CMAKE_CURRENT_BINARY_DIR}/gmp/lib/libgmp.a)
else()
        set(LIB_BTOR2TOOLS ${CMAKE_CURRENT_BINARY_DIR}/lib64/libbtor2parser.a)
        set(LIB_CADICAL ${CMAKE_CURRENT_BINARY_DIR}/lib/libcadical.a)
        set(LIB_GMP ${CMAKE_CURRENT_BINARY_DIR}/gmp/lib/libgmp.a)
        #        set(LIB_BTOR2TOOLS "")
        #       set(LIB_CADICAL "")
endif()

 
ExternalProject_Add(Bitwuzla
  PREFIX bitwuzla
  SOURCE_DIR ${BITWUZLA_DIR}
  CMAKE_CACHE_ARGS
    # Prevent Bitwuzla from attempting to link against static system libraries
    -DDISABLE_STATUS:BOOL=True
    -DCMAKE_INTERPROCEDURAL_OPTIMIZATION:BOOL=${CMAKE_INTERPROCEDURAL_OPTIMIZATION}
    -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=${CMAKE_POSITION_INDEPENDENT_CODE}
    -DCMAKE_C_COMPILER:STRING=${CMAKE_C_COMPILER}
    -DCMAKE_CXX_COMPILER:STRING=${CMAKE_CXX_COMPILER}
    -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS}
    -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
    -DBUILD_SHARED_LIBS:BOOL=${BUILD_SHARED_LIBS}
    -DIS_WINDOWS_BUILD:BOOL=${WIN32}
    -DBtor2Tools_LIBRARIES:PATH=${LIB_BTOR2TOOLS}
    -DBtor2Tools_INCLUDE_DIR:PATH=${CMAKE_CURRENT_BINARY_DIR}/include
    -DCaDiCaL_LIBRARIES:PATH=${LIB_CADICAL}
    -DCaDiCaL_INCLUDE_DIR:PATH=${CMAKE_CURRENT_BINARY_DIR}/include
    -DGMP_INCLUDE_DIR:PATH=${CMAKE_CURRENT_BINARY_DIR}/gmp/include
    -DGMP_LIBRARIES:PATH=${LIB_GMP}
    -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_CURRENT_BINARY_DIR}
    -DCMAKE_BUILD_TYPE:STRING=Production
    #    -DGTest_FOUND:BOOL=True
    -DTESTING:BOOL=OFF
    -DCMAKE_CXX_STANDARD:STRING=${CMAKE_CXX_STANDARD}
    -DCMAKE_CXX_STANDARD_REQUIRED:BOOL=${CMAKE_CXX_STANDARD_REQUIRED}
  )

ExternalProject_Add(Boolector
  PREFIX boolector
  SOURCE_DIR ${BOOLECTOR_DIR}
  CMAKE_CACHE_ARGS
    -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=${CMAKE_POSITION_INDEPENDENT_CODE}
    -DCMAKE_C_COMPILER:STRING=${CMAKE_C_COMPILER}
    -DCMAKE_CXX_COMPILER:STRING=${CMAKE_CXX_COMPILER}
    -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS}
    -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
    -DBUILD_SHARED_LIBS:BOOL=${BUILD_SHARED_LIBS}
    -DIS_WINDOWS_BUILD:BOOL=${WIN32}
    -DBtor2Tools_LIBRARIES:PATH=${LIB_BTOR2TOOLS}
    -DBtor2Tools_INCLUDE_DIR:PATH=${CMAKE_CURRENT_BINARY_DIR}/include
    -DCaDiCaL_LIBRARIES:PATH=${LIB_CADICAL}
    -DCaDiCaL_INCLUDE_DIR:PATH=${CMAKE_CURRENT_BINARY_DIR}/include
    -DGMP_INCLUDE_DIR:PATH=${CMAKE_CURRENT_BINARY_DIR}/gmp/include
    -DGMP_LIBRARIES:PATH=${LIB_GMP}
    -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_CURRENT_BINARY_DIR}
    #    -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
    -DCMAKE_BUILD_TYPE:STRING=Production
    -DTESTING:BOOL=OFF
    -DGTest_FOUND:BOOL=True
    -DCMAKE_CXX_STANDARD:STRING=${CMAKE_CXX_STANDARD}
    -DCMAKE_CXX_STANDARD_REQUIRED:BOOL=${CMAKE_CXX_STANDARD_REQUIRED}
  )

add_dependencies(Bitwuzla Cadical Btor2tools GMP)
add_dependencies(Boolector Cadical Btor2tools GMP)


if(NOT WIN32)
  add_compile_options(-fPIC)
endif()

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED True)
set(CMAKE_INSTALL_RPATH $ORIGIN)



#set(CMAKE_CXX_FLAGS "-Wall -Wextra")
set(CMAKE_CXX_FLAGS_RELEASE "-O3")
set(CMAKE_CXX_FLAGS_DEBUG "-O0 -g")

add_subdirectory(src)


