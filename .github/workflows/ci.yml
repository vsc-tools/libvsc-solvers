name: CI
on:
  - push
  - pull_request
  - workflow_dispatch

jobs:
  ci-linux:
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    strategy:
      matrix:
        include:
          - spec: 'cp38-cp38'
          - spec: 'cp39-cp39'
          - spec: 'cp310-cp310'
          - spec: 'cp311-cp311'
          - spec: 'cp312-cp312'
    steps:
    - uses: actions/checkout@v2
    - name: Fetch source dependencies
      env:
        IVPM_PYTHON: /opt/python/${{ matrix.spec }}/bin/python
        BUILD_NUM: ${{ github.run_id }}
      run: |
        echo "BUILD_NUM=${BUILD_NUM}" >> python/vsc_solvers/__build_num__.py
        ${IVPM_PYTHON} -m pip install ivpm cython
        ${IVPM_PYTHON} -m ivpm update -a
    - name: Fetch python build dependencies
      run: |
        yum install -y glibc-static
        ./packages/python/bin/python -m pip install twine auditwheel ninja wheel cython
    - name: Build packages
      run: |
        ./packages/python/bin/python setup.py bdist_wheel
    - name: Audit Wheels
      run: |
        for whl in dist/*.whl; do
            ./packages/python/bin/auditwheel repair $whl
            rm $whl
        done
        cp wheelhouse/*.whl dist

    - name: Publish to PyPi
      if: startsWith(github.ref, 'refs/heads/main')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Fetch dependencies
      run: |
        python3 --version
        python3 -m pip install ivpm
        python3 -m ivpm update -a
        ./packages/python/bin/python3 -m pip install cython setuptools wheel build twine
    - name: Build wheel
      env:
        BUILD_NUM: ${{ github.run_id }}
      run: |
        echo "BUILD_NUM=${BUILD_NUM}" >> python/vsc_dm/__build_num__.py
        ./packages/python/bin/python3 setup.py bdist_wheel
    - name: Publish to PyPi
      if: startsWith(github.ref, 'refs/heads/main')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        ./packages/python/bin/python3 -m twine  upload dist/*.whl

#  ci-macos-arm64:
#    runs-on: [self-hosted, macOS, ARM64]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Fetch source dependencies
#        run: |
#          export IVPM_PYTHON=python3
#          ${IVPM_PYTHON} -m pip install ivpm 
#          ${IVPM_PYTHON} -m ivpm update -a
#          ./packages/python/bin/python3 -m pip install twine
#      - name: Build packages
#        run: |
#          export BUILD_NUM=$GITHUB_RUN_ID
#          ./packages/python/bin/python3 setup.py bdist_wheel
#      - name: Publish to PyPi
#        if: startsWith(github.ref, 'refs/heads/main')
#        run: |
#          python3 -m twine upload dist/*
#        env:
#          TWINE_USERNAME: __token__
#          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
#  ci-macos-x86_64:
#    runs-on: [self-hosted, macOS, ARM64]
#    steps:
#      - uses: actions/checkout@v1
#      - name: Fetch source dependencies
#        run: |
#          export IVPM_PYTHON=/usr/local/bin/python3
#          arch -x86_64 ${IVPM_PYTHON} -m pip install ivpm 
#          arch -x86_64 ${IVPM_PYTHON} -m ivpm update -a
#          arch -x86_64 ./packages/python/bin/python3 -m pip install twine
#      - name: Build packages
#        run: |
#          export BUILD_NUM=$GITHUB_RUN_ID
#          arch -x86_64 ./packages/python/bin/python3 setup.py bdist_wheel --plat-name macosx_10_9_x86_64
#      - name: Publish to PyPi
#        if: startsWith(github.ref, 'refs/heads/main')
#        run: |
#          arch -x86_64 ./packages/python/bin/python3 -m twine upload dist/*_x86_64.whl
#        env:
#          TWINE_USERNAME: __token__
#          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
#
